#!/usr/bin/env bash
#
# @(#)rpt 0.0.1
# @(#)(c) 2019 redpeacock78
# @(#)GPLv3+ is applied to this script.
# @(#)
########################################
# @(#)Generates the given STRING a specified number of times.
# @(#)Grobals:
# @(#)  None
# @(#)Arguments:
# @(#)  --del=[DELIMITER]
# @(#)  -h, --help
# @(#)  -v, --version
# @(#)Returns:
# @(#)  None
# @(#)Depends:
# @(#)  PRINTF
# @(#)  BASH
# @(#)  EVAL
# @(#)  AWK
# @(#)  CAT
########################################



####MESSAGES####
###VERSION###
function version(){
  {
   cat << EOS >&2
${0##*/} 0.0.1
Copyright (C) 2019 redpeacock78
License GPLv3+: GNU GPL version3 or later.

THIS IS FREE SOFTWARE.
YOU ARE FREE TO CHANGE AND REDISTRIBUTE IT.
THERE IS NO WARRANTY, TO THE EXTENT PERMITTED BY LAW.

Written by redpeacock78 <https://github.com/redpeacock78>.
EOS
   exit 0
  }
}
###SHOW_USAGE###
function usage(){
  {
   cat << EOS
Usage: ${0##*/} [OPTION] [STRING] [NUMBER]
Generates the given STRING a specified NUMBER of times.

Option:
  --del=[DELIMITER]   Specify the delimiter (default: \n)
  -h, --help          Show usage
  -v, --version       Show version and info

TL;DR
  $ rpt 🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️ 13
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️
  🔴🔴🔴⚪️⚪️⚪️🔵🔵🔵⚪️⚪️⚪️

  $ echo 響け！ユーフォニアム | rpt --del=, 4
  響け！ユーフォニアム,響け！ユーフォニアム,響け！ユーフォニアム,響け！ユーフォニアム
EOS
   exit 0
  }
}
###ERROR_MESSAGE###
function error(){
  {
   cat << ERR 1>&2
${0##*/}: Sorry. An error has occurred :_(
Refer '${0##*/} -h' or '${0##*/} --help' for how to use the command.
ERR
   exit 1
  }
}


####MAIN_PROCESSING####
function main(){
  if [[ -z "${DELIMITER}" ]]; then
    eval printf "${STRING}""%.s${DELIMITER:-\\\\n}" {1.."${NUMBER}"}
  else
    eval printf "${STRING}""%.s${DELIMITER:-\\\\n}" {1.."${NUMBER}"} \
    | awk 'sub(/'"${DELIMITER}"'$/,"",$0)'
  fi
}

function option_perse(){
  if [[ "${@}" == -h ]] || \
     [[ "${@}" == --help ]]; then
    usage
  elif [[ "${@}" == -v ]] || \
       [[ "${@}" == --version ]]; then
    version
  elif [[ -p /dev/stdin ]]; then
    declare STRING="$(awk -v RS='\r\n' -v ORS='\n' '{print}' <(cat -))"
    if [[ "${1}" =~ --del= ]]; then
      declare DELIMITER="${1#*=}"
      if [[ "${2}" =~ ^[0-9]+$ ]]; then
        declare NUMBER="${2}"
        main "${DELIMITER}" "${STRING}" "${NUMBER}"
      elif [[ ! "${2}" =~ ^[0-9]+$ ]]; then
      	error
      fi
    elif [[ "${1}" =~ ^[0-9]+$ ]]; then
      declare NUMBER="${1}"
      main "${STRING}" "${NUMBER}"
    elif [[ ! "${1}" =~ ^[0-9]+$ ]]; then
      error
    elif [[ ! "${1}" =~ --del= ]]; then
      error
    fi
  elif [[ "${1}" =~ --del= ]]; then
    declare DELIMITER="${1#*=}"
    if [[ "${3}" =~ ^[0-9]+$ ]]; then
      declare NUMBER="${3}"
      declare STRING="${2}"
      main "${DELIMITER}" "${STRING}" "${NUMBER}"
    elif [[ ! "${3}" =~ ^[0-9]+$ ]]; then
      error
    fi
  else
    declare STRING="${1}"
    if [[ "${2}" =~ ^[0-9]+$ ]]; then
      declare NUMBER="${2}"
      main "${STRING}" "${NUMBER}"
    elif [[ ! "${2}" =~ ^[0-9]+$ ]]; then
      error
    fi
  fi
}

option_perse "${@}"
